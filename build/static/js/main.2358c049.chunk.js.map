{"version":3,"sources":["VG.js","LinkedList.js","Cell.js","Tools.js","Tile.js","HexGrid.js","PathUtil.js","AStarFinder.js","Loader.js","Board.js","Scene.js","App.js","reportWebVitals.js","index.js"],"names":["vg","VERSION","PI","Math","TAU","DEG_TO_RAD","RAD_TO_DEG","SQRT3","sqrt","TILE","ENT","STR","HEX","SQR","ABS","loader","THREE","load","LinkedListNode","this","obj","next","prev","free","LinkedList","first","last","length","objToNodeMap","uniqueID","Date","now","floor","random","sortArray","node","generateID","err","console","error","newObj","addNode","Error","showDebug","dump","c","getNode","b","a","oldCNext","moveUp","compare","i","l","push","clear","sort","add","list","msg","log","toString","slice","Cell","q","r","s","h","tile","userData","walkable","_calcCost","_priority","_visited","_parent","cell","Tools","val","min","max","abs","arguments","v","angle","nodeType","window","constructor","Object","prototype","hasOwnProperty","call","target","src","self","array","Array","isArray","dst","concat","forEach","e","isPlainObject","merge","indexOf","keys","key","nwf","system","Performance","elapsedTime","performance","lastChild","removeChild","arr","idxBegin","idxEnd","bit","idx","idxOnes","mask","tmp","radixSort","base","range","rgb","split","color","randomInt","parseInt","substring","config","xhr","XMLHttpRequest","uri","cache","url","onreadystatechange","status","warn","statusText","json","JSON","parse","responseText","callback","scope","open","setRequestHeader","send","Tile","settings","geometry","material","dispose","objectType","entity","selected","highlight","mesh","structure","position","rotation","x","scale","set","emissive","_emissive","getHex","setHex","deselect","select","parent","remove","HexGrid","_geoCache","type","size","cellSize","cells","numCells","extrudeSettings","autogenerated","verts","createVertex","cellShape","moveTo","y","lineTo","autoClose","cellGeo","vertices","verticesNeedUpdate","cellShapeGeo","_cellWidth","_cellLength","_hashDelimeter","_directions","_diagonals","_list","_vec3","_cel","_conversionVec","_matCache","cos","sin","rx","round","ry","rz","xDiff","yDiff","zDiff","z","pos","TWO_THIRDS","_cubeRound","cellToHash","diagonal","filter","n","copy","cellA","cellB","d","cb","height","geo","depth","t","tiles","tileScale","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","generateTile","cellToPixel","rotateOnAxis","overlayObj","overlayMat","createPointsGeometry","line","getJSON","fromJSON","k","PathUtil","path","reverse","nodeA","nodeB","pathA","backtrace","pathB","dx","dy","sum","x0","y0","x1","y1","sx","sy","e2","coord0","coord1","interpolated","interpolatedLen","j","expanded","len","interpolate","grid","ex","ey","newPath","lastValidCoord","coord","testCoord","blocked","isWalkableAt","lx","ly","ldx","ldy","sq","compressed","px","py","AStarFinder","finderConfig","allowDiagonal","heuristicFilter","startNode","endNode","heuristic","current","costSoFar","neighbors","clearPath","shift","getNeighbors","distance","Loader","manager","imageLoader","crossOrigin","mapping","onLoad","onError","texture","image","needsUpdate","evt","sourceFile","Board","tileGroup","group","overlay","finder","init","setGrid","heightOffset","snapTileToGrid","splice","children","pixelToCell","startTile","endTile","findPath","newGrid","removeAllTiles","mat","opacity","generateOverlay","reset","generateTiles","Scene","sceneConfig","controlConfig","sceneSettings","element","document","body","alpha","antialias","clearColor","sortObjects","fog","light","lightPosition","cameraType","cameraPosition","orthoZoom","controlSettings","minDistance","maxDistance","zoomSpeed","noZoom","renderer","setClearColor","width","innerWidth","innerHeight","container","normalize","camera","contolled","addEventListener","left","right","top","bottom","aspect","updateProjectionMatrix","setSize","bind","attachTo","style","setPixelRatio","devicePixelRatio","appendChild","domElement","render","lookAt","App","scene","mount","board","generateTilemap","focusOn","idle","requestAnimationFrame","animate","ref","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2358c049.chunk.js","sourcesContent":["import * as THREE from \"three\";\nvar vg = { // eslint-disable-line\n\tVERSION: '0.1.1',\n\n\tPI: Math.PI,\n\tTAU: Math.PI * 2,\n\tDEG_TO_RAD: 0.0174532925,\n\tRAD_TO_DEG: 57.2957795,\n\tSQRT3: Math.sqrt(3), // used often in hex conversions\n\n\t// useful enums for type checking. change to whatever fits your game. these are just examples\n\tTILE: 'tile', // visual representation of a grid cell\n\tENT: 'entity', // dynamic things\n\tSTR: 'structure', // static things\n\n\tHEX: 'hex',\n\tSQR: 'square',\n\tABS: 'abstract'\n};\n\nvar loader = new THREE.TextureLoader();\nvar tundra = loader.load('./image/tundra.jpg');\nvar ice = loader.load('./image/ice.jpg');\nvar sea = loader.load('./image/water.jpg');\nvar sand = loader.load('./image/sand.jpg');\nvar grassland = loader.load('./image/grassland.jpg');\nvar hills = loader.load('./image/hills.jpg');\nvar mountain = loader.load('./image/mountains.jpg');\n\nexport default vg;\n","var LinkedListNode = function() {\n\tthis.obj = null;\n\tthis.next = null;\n\tthis.prev = null;\n\tthis.free = true;\n};\n\nclass LinkedList {\n\tconstructor() {\n\t\tthis.first = null;\n\t\tthis.last = null;\n\t\tthis.length = 0;\n\t\tthis.objToNodeMap = {}; // a quick lookup list to map linked list nodes to objects\n\t\tthis.uniqueID = Date.now() + '' + Math.floor(Math.random()*1000);\n\n\t\tthis.sortArray = [];\n\t}\n\t\n\tstatic generateID() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t}\n\n\tgetNode(obj) {\n\t\t// objects added to a list must implement a uniqueID which returns a unique object identifier string\n\t\treturn this.objToNodeMap[obj.uniqueID];\n\t}\n\n\t/*\n\t\tAdds a new node to the list -- typically only used internally unless you're doing something funky\n\t\tUse add() to add an object to the list, not this.\n\t */\n\taddNode(obj) {\n\t\tvar node = new LinkedListNode();\n\t\tif (!obj.uniqueID) {\n\t\t\ttry {\n\t\t\t\tobj.uniqueID = LinkedList.generateID();\n\t\t\t\t// console.log('New ID: '+obj.uniqueID);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.error('[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tnode.obj = obj;\n\t\tnode.free = false;\n\t\tthis.objToNodeMap[obj.uniqueID] = node;\n\t\treturn node;\n\t}\n\n\tswapObjects(node, newObj) {\n\t\tthis.objToNodeMap[node.obj.uniqueID] = null;\n\t\tthis.objToNodeMap[newObj.uniqueID] = node;\n\t\tnode.obj = newObj;\n\t}\n\n\t/*\n\t\tAdd an item to the list\n\t\t@param obj The object to add\n\t */\n\tadd(obj) {\n\t\tvar node = this.objToNodeMap[obj.uniqueID];\n\n\t\tif (!node) {\n\t\t\tnode = this.addNode(obj);\n\t\t}\n\t\telse {\n\t\t\tif (node.free === false) return;\n\n\t\t\t// reusing a node, so we clean it up\n\t\t\t// this caching of node/object pairs is the reason an object can only exist\n\t\t\t// once in a list -- which also makes things faster (not always creating new node\n\t\t\t// object every time objects are moving on and off the list\n\t\t\tnode.obj = obj;\n\t\t\tnode.free = false;\n\t\t\tnode.next = null;\n\t\t\tnode.prev = null;\n\t\t}\n\n\t\t// append this obj to the end of the list\n\t\tif (!this.first) { // is this the first?\n\t\t\tthis.first = node;\n\t\t\tthis.last = node;\n\t\t\tnode.next = null; // clear just in case\n\t\t\tnode.prev = null;\n\t\t}\n\t\telse {\n\t\t\tif (!this.last) {\n\t\t\t\tthrow new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");\n\t\t\t}\n\n\t\t\t// add this entry to the end of the list\n\t\t\tthis.last.next = node; // current end of list points to the new end\n\t\t\tnode.prev = this.last;\n\t\t\tthis.last = node;            // new object to add becomes last in the list\n\t\t\tnode.next = null;      // just in case this was previously set\n\t\t}\n\t\tthis.length++;\n\n\t\tif (this.showDebug) this.dump('after add');\n\t}\n\n\thas(obj) {\n\t\treturn !!this.objToNodeMap[obj.uniqueID];\n\t}\n\n\t/*\n\t\tMoves this item upwards in the list\n\t\t@param obj\n\t */\n\tmoveUp(obj) {\n\t\tthis.dump('before move up');\n\t\tvar c = this.getNode(obj);\n\t\tif (!c) throw \"Oops, trying to move an object that isn't in the list\";\n\t\tif (!c.prev) return; // already first, ignore\n\n\t\t// This operation makes C swap places with B:\n\t\t// A <-> B <-> C <-> D\n\t\t// A <-> C <-> B <-> D\n\n\t\tvar b = c.prev;\n\t\tvar a = b.prev;\n\n\t\t// fix last\n\t\tif (c == this.last) this.last = b;\n\n\t\tvar oldCNext = c.next;\n\n\t\tif (a) a.next = c;\n\t\tc.next = b;\n\t\tc.prev = b.prev;\n\n\t\tb.next = oldCNext;\n\t\tb.prev = c;\n\n\t\t// check to see if we are now first\n\t\tif (this.first == b) this.first = c;\n\t}\n\n\t/*\n\t\tMoves this item downwards in the list\n\t\t@param obj\n\t */\n\tmoveDown(obj) {\n\t\tvar b = this.getNode(obj);\n\t\tif (!b) throw \"Oops, trying to move an object that isn't in the list\";\n\t\tif (!b.next) return; // already last, ignore\n\n\t\t// This operation makes B swap places with C:\n\t\t// A <-> B <-> C <-> D\n\t\t// A <-> C <-> B <-> D\n\n\t\tvar c = b.next;\n\t\tthis.moveUp(c.obj);\n\n\t\t// check to see if we are now last\n\t\tif (this.last == c) this.last = b;\n\t}\n\n\t/*\n\t\tTake everything off the list and put it in an array, sort it, then put it back.\n\t */\n\tsort(compare) {\n\t\tvar sortArray = this.sortArray;\n\t\tvar i, l, node = this.first;\n\t\tsortArray.length = 0;\n\n\t\twhile (node) {\n\t\t\tsortArray.push(node.obj);\n\t\t\tnode = node.next;\n\t\t}\n\n\t\tthis.clear();\n\n\t\tsortArray.sort(compare);\n\t\t// console.log(sortArray);\n\t\tl = sortArray.length;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tthis.add(sortArray[i]);\n\t\t}\n\t}\n\n\t/*\n\t\tRemoves an item from the list\n\t\t@param obj The object to remove\n\t\t@returns boolean true if the item was removed, false if the item was not on the list\n\t */\n\tremove(obj) {\n\t\tvar node = this.getNode(obj);\n\t\tif (!node || node.free){\n\t\t\treturn false; // ignore this error (trying to remove something not there)\n\t\t}\n\n\t\t// pull this object out and tie up the ends\n\t\tif (node.prev) node.prev.next = node.next;\n\t\tif (node.next) node.next.prev = node.prev;\n\n\t\t// fix first and last\n\t\tif (!node.prev) // if this was first on the list\n\t\t\tthis.first = node.next; // make the next on the list first (can be null)\n\t\tif (!node.next) // if this was the last\n\t\t\tthis.last = node.prev; // then this node's previous becomes last\n\n\t\tnode.free = true;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\n\t\tthis.length--;\n\n\t\treturn true;\n\t}\n\n\t// remove the head and return it's object\n\tshift() {\n\t\tvar node = this.first;\n\t\tif (this.length === 0) return null;\n\t\t// if (node == null || node.free == true) return null;\n\n\t\t// pull this object out and tie up the ends\n\t\tif (node.prev) {\n\t\t\tnode.prev.next = node.next;\n\t\t}\n\t\tif (node.next) {\n\t\t\tnode.next.prev = node.prev;\n\t\t}\n\n\t\t// make the next on the list first (can be null)\n\t\tthis.first = node.next;\n\t\tif (!node.next) this.last = null; // make sure we clear this\n\n\t\tnode.free = true;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\n\t\tthis.length--;\n\t\treturn node.obj;\n\t}\n\n\t// remove the tail and return it's object\n\tpop() {\n\t\tvar node = this.last;\n\t\tif (this.length === 0) return null;\n\n\t\t// pull this object out and tie up the ends\n\t\tif (node.prev) {\n\t\t\tnode.prev.next = node.next;\n\t\t}\n\t\tif (node.next) {\n\t\t\tnode.next.prev = node.prev;\n\t\t}\n\n\t\t// this node's previous becomes last\n\t\tthis.last = node.prev;\n\t\tif (!node.prev) this.first = null; // make sure we clear this\n\n\t\tnode.free = true;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\n\t\tthis.length--;\n\t\treturn node.obj;\n\t}\n\n\t/**\n\t * Add the passed list to this list, leaving it untouched.\n\t */\n\tconcat(list) {\n\t\tvar node = list.first;\n\t\twhile (node) {\n\t\t\tthis.add(node.obj);\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\t/**\n\t * Clears the list out\n\t */\n\tclear() {\n\t\tvar next = this.first;\n\n\t\twhile (next) {\n\t\t\tnext.free = true;\n\t\t\tnext = next.next;\n\t\t}\n\n\t\tthis.first = null;\n\t\tthis.length = 0;\n\t}\n\n\tdispose() {\n\t\tvar next = this.first;\n\n\t\twhile (next) {\n\t\t\tnext.obj = null;\n\t\t\tnext = next.next;\n\t\t}\n\t\tthis.first = null;\n\n\t\tthis.objToNodeMap = null;\n\t}\n\n\t/*\n\t\tOutputs the contents of the current list for debugging.\n\t */\n\tdump(msg) {\n\t\tconsole.log('====================' + msg + '=====================');\n\t\tvar a = this.first;\n\t\twhile (a) {\n\t\t\tconsole.log(\"{\" + a.obj.toString() + \"} previous=\" + (a.prev ? a.prev.obj : \"NULL\"));\n\t\t\ta = a.next();\n\t\t}\n\t\tconsole.log(\"===================================\");\n\t\tconsole.log(\"Last: {\" + (this.last ? this.last.obj : 'NULL') + \"} \" +\n\t\t\t\"First: {\" + (this.first ? this.first.obj : 'NULL') + \"}\");\n\t}\n\n}\n\nexport default LinkedList;\n","import LinkedList from './LinkedList';\n\nclass Cell {\n\tconstructor(q, r, s, h){\n\t\tthis.q = q || 0; // x grid coordinate (using different letters so that it won't be confused with pixel/world coordinates)\n\t\tthis.r = r || 0; // y grid coordinate\n\t\tthis.s = s || 0; // z grid coordinate\n\t\tthis.h = h || 1; // 3D height of the cell, used by visual representation and pathfinder, cannot be less than 1\n\t\tthis.tile = null; // optional link to the visual representation's class instance\n\t\tthis.userData = {}; // populate with any extra data needed in your game\n\t\tthis.walkable = true; // if true, pathfinder will use as a through node\n\t\t// rest of these are used by the pathfinder and overwritten at runtime, so don't touch\n\t\tthis._calcCost = 0;\n\t\tthis._priority = 0;\n\t\tthis._visited = false;\n\t\tthis._parent = null;\n\t\tthis.uniqueID = LinkedList.generateID();\n\t}\n\n\tset(q, r, s) {\n\t\tthis.q = q;\n\t\tthis.r = r;\n\t\tthis.s = s;\n\t\treturn this;\n\t}\n\n\tcopy(cell) {\n\t\tthis.q = cell.q;\n\t\tthis.r = cell.r;\n\t\tthis.s = cell.s;\n\t\tthis.h = cell.h;\n\t\tthis.tile = cell.tile || null;\n\t\tthis.userData = cell.userData || {};\n\t\tthis.walkable = cell.walkable;\n\t\treturn this;\n\t}\n\n    add(cell){\n        this.q += cell.q;\n\t\tthis.r += cell.r;\n\t\tthis.s += cell.s;\n\t\treturn this;\n    }\n\n\tequals(cell) {\n\t\treturn this.q === cell.q && this.r === cell.r && this.s === cell.s;\n\t}\n}\n\nexport default Cell;\n","\nclass Tools {\n\tconstructor() {\n\t\t\n\t}\n\n\tstatic clamp(val, min, max) {\n\t\treturn Math.max(min, Math.min(max, val));\n\t}\n\n\tstatic sign(val) {\n\t\treturn val && val / Math.abs(val);\n\t}\n\n\t/**\n\t * If one value is passed, it will return something from -val to val.\n\t * Else it returns a value between the range specified by min, max.\n\t */\n\tstatic random(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5);\n\t\t}\n\t\treturn Math.random() * (max - min) + min;\n\t}\n\n\t// from min to (and including) max\n\tstatic randomInt(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5) | 0;\n\t\t}\n\t\treturn (Math.random() * (max - min + 1) + min) | 0;\n\t}\n\n\tstatic normalize(v, min, max) {\n\t\treturn (v - min) / (max - min);\n\t}\n\n\tstatic getShortRotation(angle) {\n\t\tangle %= this.TAU;\n\t\tif (angle > this.PI) {\n\t\t\tangle -= this.TAU;\n\t\t}\n\t\telse if (angle < -this.PI) {\n\t\t\tangle += this.TAU;\n\t\t}\n\t\treturn angle;\n\t}\n\n\tstatic generateID() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t}\n\n\tstatic isPlainObject(obj) {\n\t\tif (typeof(obj) !== 'object' || obj.nodeType || obj === obj.window) {\n\t\t\treturn false;\n\t\t}\n\t\t// The try/catch suppresses exceptions thrown when attempting to access the 'constructor' property of certain host objects, ie. |window.location|\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n\t\ttry {\n\t\t\tif (obj.constructor && !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t}\n\n\t// https://github.com/KyleAMathews/deepmerge/blob/master/index.js\n\tstatic merge(target, src) {\n\t\tvar self = this, array = Array.isArray(src);\n\t\tvar dst = array && [] || {};\n\t\tif (array) {\n\t\t\ttarget = target || [];\n\t\t\tdst = dst.concat(target);\n\t\t\tsrc.forEach(function(e, i) {\n\t\t\t\tif (typeof dst[i] === 'undefined') {\n\t\t\t\t\tdst[i] = e;\n\t\t\t\t}\n\t\t\t\telse if (self.isPlainObject(e)) {\n\t\t\t\t\tdst[i] = self.merge(target[i], e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.indexOf(e) === -1) {\n\t\t\t\t\t\tdst.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn dst;\n\t\t}\n\t\tif (target && self.isPlainObject(target)) {\n\t\t\tObject.keys(target).forEach(function (key) {\n\t\t\t\tdst[key] = target[key];\n\t\t\t});\n\t\t}\n\t\tObject.keys(src).forEach(function (key) {\n\t\t\tif (!src[key] || !self.isPlainObject(src[key])) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdst[key] = self.merge(target[key], src[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn dst;\n\t}\n\n\tstatic now() {\n\t\treturn window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n\t}\n\n\tstatic empty(node) {\n\t\twhile (node.lastChild) {\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\t}\n\n\t/*\n\t\t@source: http://jsperf.com/radix-sort\n\t */\n\tstatic radixSort(arr, idxBegin, idxEnd, bit) {\n\t\tidxBegin = idxBegin || 0;\n\t\tidxEnd = idxEnd || arr.length;\n\t\tbit = bit || 31;\n\t\tif (idxBegin >= (idxEnd - 1) || bit < 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar idx = idxBegin;\n\t\tvar idxOnes = idxEnd;\n\t\tvar mask = 0x1 << bit;\n\t\twhile (idx < idxOnes) {\n\t\t\tif (arr[idx] & mask) {\n\t\t\t\t--idxOnes;\n\t\t\t\tvar tmp = arr[idx];\n\t\t\t\tarr[idx] = arr[idxOnes];\n\t\t\t\tarr[idxOnes] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t++idx;\n\t\t\t}\n\t\t}\n\t\tthis.radixSort(arr, idxBegin, idxOnes, bit-1);\n\t\tthis.radixSort(arr, idxOnes, idxEnd, bit-1);\n\t}\n\n\tstatic randomizeRGB(base, range) {\n\t\tvar rgb = base.split(',');\n\t\tvar color = 'rgb(';\n\t\tvar i, c;\n\t\trange = this.randomInt(range);\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tc = parseInt(rgb[i]) + range;\n\t\t\tif (c < 0) c = 0;\n\t\t\telse if (c > 255) c = 255;\n\t\t\tcolor += c + ',';\n\t\t}\n\t\tcolor = color.substring(0, color.length-1);\n\t\tcolor += ')';\n\t\treturn color;\n\t}\n\n\tstatic getJSON(config) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar cache = typeof config.cache === 'undefined' ? false : config.cache;\n\t\tvar uri = cache ? config.url : config.url + '?t=' + Math.floor(Math.random() * 10000) + Date.now();\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (this.status === 200) {\n\t\t\t\tvar json = null;\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(this.responseText);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\t// console.warn('[Tools.getJSON] Error: '+config.url+' is not a json resource');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconfig.callback.call(config.scope || null, json);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (this.status !== 0) {\n\t\t\t\tconsole.warn('[Tools.getJSON] Error: '+this.status+' ('+this.statusText+') :: '+config.url);\n\t\t\t}\n\t\t};\n\t\t\n\t\txhr.open('GET', uri, true);\n\t\txhr.setRequestHeader('Accept', 'application/json');\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.send('');\n\t}\n\n}\n\nexport default Tools;\n","import Tools from './Tools';\nimport vg from './VG';\nimport * as THREE from \"three\";\n\nclass Tile {\n    constructor(config) {\n        config = config || {};\n        var settings = {\n            cell: null, // required vg.Cell\n            geometry: null, // required threejs geometry\n            material: null // not required but it would improve performance significantly\n        };\n        settings = Tools.merge(settings, config);\n\n        if (!settings.cell || !settings.geometry) {\n            throw new Error('Missing vg.Tile configuration');\n        }\n\n        this.cell = settings.cell;\n        if (this.cell.tile && this.cell.tile !== this) this.cell.tile.dispose(); // remove whatever was there\n        this.cell.tile = this;\n\n        this.uniqueID = Tools.generateID();\n\n        this.geometry = settings.geometry;\n        this.material = settings.material;\n        if (!this.material) {\n            // switch (this.cell.tile.cell.userData.type) {\n            //     case \"Tundra\":\n            //         texture = tundra;\n            //         break;\n            //     case \"Ice\":\n            //         texture = ice;\n            //         break;\n            //     case \"Sea\":\n            //         texture = sea;\n            //         break;\n            //     case \"Sand\":\n            //         texture = sand;\n            //         break;\n            //     case \"Grassland\":\n            //         texture = grassland;\n            //         break;\n            //     case \"Hills\":\n            //         texture = hills;\n            //         break;\n            //     case \"Mountain\":\n            //         texture = mountain;\n            //         break;\n            // }\n\n            this.material = new THREE.MeshPhongMaterial();//{map: texture });\n            //     texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        }\n\n        this.objectType = vg.TILE;\n        this.entity = null;\n        this.userData = {};\n\n        this.selected = false;\n        this.highlight = '0x0084cc';\n\n        this.mesh = new THREE.Mesh(this.geometry);//, this.material);\n        this.mesh.userData.structure = this;\n\n        // create references so we can control orientation through this (Tile), instead of drilling down\n        this.position = this.mesh.position;\n        this.rotation = this.mesh.rotation;\n\n        // rotate it to face \"up\" (the threejs coordinate space is Y+)\n        this.rotation.x = -90 * vg.DEG_TO_RAD;\n        this.mesh.scale.set(settings.scale, settings.scale, 1);\n\n        if (this.material.emissive) {\n            this._emissive = this.material.emissive.getHex();\n        }\n        else {\n            this._emissive = null;\n        }\n    }\n\n    select() {\n\t\tif (this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this.highlight);\n\t\t}\n\t\tthis.selected = true;\n\t\treturn this;\n\t}\n\n\tdeselect() {\n\t\tif (this._emissive !== null && this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this._emissive);\n\t\t}\n\t\tthis.selected = false;\n\t\treturn this;\n\t}\n\n\ttoggle() {\n\t\tif (this.selected) {\n\t\t\tthis.deselect();\n\t\t}\n\t\telse {\n\t\t\tthis.select();\n\t\t}\n\t\treturn this;\n\t}\n\n\tdispose() {\n\t\tif (this.cell && this.cell.tile) this.cell.tile = null;\n\t\tthis.cell = null;\n\t\tthis.position = null;\n\t\tthis.rotation = null;\n\t\tif (this.mesh.parent) this.mesh.parent.remove(this.mesh);\n\t\tthis.mesh.userData.structure = null;\n\t\tthis.mesh = null;\n\t\tthis.material = null;\n\t\tthis.userData = null;\n\t\tthis.entity = null;\n\t\tthis.geometry = null;\n\t\tthis._emissive = null;\n\t}\n}\n\nexport default Tile;\n","import * as THREE from \"three\";\nimport vg from './VG';\nimport Cell from './Cell';\nimport Tools from './Tools';\nimport Tile from './Tile';\n\nclass HexGrid {\n\tconstructor(config) {\n\t\tthis._geoCache = {};\n\n\t\tconfig = config || {};\n\t\t/*  ______________________________________________\n\t\t\tGRID INTERFACE:\n\t\t*/\n\t\tthis.type = vg.HEX;\n\t\tthis.size = 5; // only used for generated maps\n\t\tthis.cellSize = typeof config.cellSize === 'undefined' ? 10 : config.cellSize;\n\t\tthis.cells = {};\n\t\tthis.numCells = 0;\n\n\t\tthis.extrudeSettings = null;\n\t\tthis.autogenerated = false;\n\n\t\t// create base shape used for building geometry\n\t\tvar i, verts = [];\n\t\t// create the skeleton of the hex\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tverts.push(this.createVertex(i));\n\t\t}\n\t\t// copy the verts into a shape for the geometry to use\n\t\tthis.cellShape = new THREE.Shape();\n\t\tthis.cellShape.moveTo(verts[0].x, verts[0].y);\n\t\tfor (i = 1; i < 6; i++) {\n\t\t\tthis.cellShape.lineTo(verts[i].x, verts[i].y);\n\t\t}\n\t\tthis.cellShape.lineTo(verts[0].x, verts[0].y);\n\t\tthis.cellShape.autoClose = true;\n\n\t\tthis.cellGeo = new THREE.Geometry();\n\t\tthis.cellGeo.vertices = verts;\n\t\tthis.cellGeo.verticesNeedUpdate = true;\n\n\t\tthis.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape);\n\n\t\t/*  ______________________________________________\n\t\t\tPRIVATE\n\t\t*/\n\n\t\tthis._cellWidth = this.cellSize * 2;\n\t\tthis._cellLength = (vg.SQRT3 * 0.5) * this._cellWidth;\n\t\tthis._hashDelimeter = '.';\n\t\t// pre-computed permutations\n\t\tthis._directions = [new Cell(+1, -1, 0), new Cell(+1, 0, -1), new Cell(0, +1, -1),\n\t\t\t\t\t\t\tnew Cell(-1, +1, 0), new Cell(-1, 0, +1), new Cell(0, -1, +1)];\n\t\tthis._diagonals = [new Cell(+2, -1, -1), new Cell(+1, +1, -2), new Cell(-1, +2, -1),\n\t\t\t\t\t\tnew Cell(-2, +1, +1), new Cell(-1, -1, +2), new Cell(+1, -2, +1)];\n\t\t// cached objects\n\t\tthis._list = [];\n\t\tthis._vec3 = new THREE.Vector3();\n\t\tthis._cel = new Cell();\n\t\tthis._conversionVec = new THREE.Vector3();\n\t\tthis._geoCache = [];\n\t\tthis._matCache = [];\n\t}\n    \n    createVertex(i) {\n\t\tvar angle = (vg.TAU / 6) * i;\n\t\treturn new THREE.Vector3((this.cellSize * Math.cos(angle)), (this.cellSize * Math.sin(angle)), 0);\n\t}\n\n    cubeRound(h) {\n\t\tvar rx = Math.round(h.q);\n\t\tvar ry = Math.round(h.r);\n\t\tvar rz = Math.round(h.s);\n\n\t\tvar xDiff = Math.abs(rx - h.q);\n\t\tvar yDiff = Math.abs(ry - h.r);\n\t\tvar zDiff = Math.abs(rz - h.s);\n\n\t\tif (xDiff > yDiff && xDiff > zDiff) {\n\t\t\trx = -ry-rz;\n\t\t}\n\t\telse if (yDiff > zDiff) {\n\t\t\try = -rx-rz;\n\t\t}\n\t\telse {\n\t\t\trz = -rx-ry;\n\t\t}\n\n\t\treturn this._cel.set(rx, ry, rz);\n\t}\n\n    cellToPixel(cell) {\n\t\tthis._vec3.x = cell.q * this._cellWidth * 0.75;\n\t\tthis._vec3.y = cell.h;\n\t\tthis._vec3.z = -((cell.s - cell.r) * this._cellLength * 0.5);\n\t\treturn this._vec3;\n\t}\n\n\tpixelToCell(pos) {\n\t\t// convert a position in world space (\"pixels\") to cell coordinates\n\t\tvar q = pos.x * (HexGrid.TWO_THIRDS / this.cellSize);\n\t\tvar r = ((-pos.x / 3) + (vg.SQRT3/3) * pos.z) / this.cellSize;\n\t\tthis._cel.set(q, r, -q-r);\n\t\treturn this._cubeRound(this._cel);\n\t}\n\n\tgetCellAt(pos) {\n\t\t// get the Cell (if any) at the passed world position\n\t\tvar q = pos.x * (HexGrid.TWO_THIRDS / this.cellSize);\n\t\tvar r = ((-pos.x / 3) + (vg.SQRT3/3) * pos.z) / this.cellSize;\n\t\tthis._cel.set(q, r, -q-r);\n\t\tthis._cubeRound(this._cel);\n\t\treturn this.cells[this.cellToHash(this._cel)];\n\t}\n\n\tgetNeighbors(cell, diagonal, filter) {\n\t\t// always returns an array\n\t\tvar i, n, l = this._directions.length;\n\t\tthis._list.length = 0;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tthis._cel.copy(cell);\n\t\t\tthis._cel.add(this._directions[i]);\n\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._list.push(n);\n\t\t}\n\t\tif (diagonal) {\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tthis._cel.copy(cell);\n\t\t\t\tthis._cel.add(this._diagonals[i]);\n\t\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._list.push(n);\n\t\t\t}\n\t\t}\n\t\treturn this._list;\n\t}\n\n\tgetRandomCell() {\n\t\tvar c, i = 0, x = vg.Tools.randomInt(0, this.numCells);\n\t\tfor (c in this.cells) {\n\t\t\tif (i === x) {\n\t\t\t\treturn this.cells[c];\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn this.cells[c];\n\t}\n\n\tcellToHash(cell) {\n\t\treturn cell.q+this._hashDelimeter+cell.r+this._hashDelimeter+cell.s;\n\t}\n\n\tdistance(cellA, cellB) {\n\t\tvar d = Math.max(Math.abs(cellA.q - cellB.q), Math.abs(cellA.r - cellB.r), Math.abs(cellA.s - cellB.s));\n\t\td += cellB.h - cellA.h; // include vertical height\n\t\treturn d;\n\t}\n\n\tclearPath() {\n\t\tvar i, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tc._calcCost = 0;\n\t\t\tc._priority = 0;\n\t\t\tc._parent = null;\n\t\t\tc._visited = false;\n\t\t}\n\t}\n\n\ttraverse(cb) {\n\t\tvar i;\n\t\tfor (i in this.cells) {\n\t\t\tcb(this.cells[i]);\n\t\t}\n\t}\n\n\tgenerateTile(cell, scale, material) {\n\t\tvar height = Math.abs(cell.h);\n\t\tif (height < 1) height = 1;\n\n\t\tvar geo = this._geoCache[height];\n\t\tif (!geo) {\n\t\t\tthis.extrudeSettings.depth = height;\n\t\t\tgeo = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings);\n\t\t\tthis._geoCache[height] = geo;\n\t\t}\n\n\t\tvar tile = new Tile({\n\t\t\tsize: this.cellSize,\n\t\t\tscale: scale,\n\t\t\tcell: cell,\n\t\t\tgeometry: geo,\n\t\t\tmaterial: material\n\t\t});\n\n\t\tcell.tile = tile;\n\n\t\treturn tile;\n\t}\n\n\tgenerateTiles(config) {\n\t\tconfig = config || {};\n\t\tvar tiles = [];\n\t\tvar settings = {\n\t\t\ttileScale: 0.95,\n\t\t\tcellSize: this.cellSize,\n\t\t\tmaterial: null,\n\t\t\textrudeSettings: {\n\t\t\t\tdepth: 1,\n\t\t\t\tbevelEnabled: true,\n\t\t\t\tbevelSegments: 1,\n\t\t\t\tsteps: 1,\n\t\t\t\tbevelSize: this.cellSize/20,\n\t\t\t\tbevelThickness: this.cellSize/20\n\t\t\t}\n\t\t};\n\n\t\tsettings = Tools.merge(settings, config);\n\n\t\t// overwrite with any new dimensions\n\t\tthis.cellSize = settings.cellSize;\n\t\tthis._cellWidth = this.cellSize * 2;\n\t\tthis._cellLength = (vg.SQRT3 * 0.5) * this._cellWidth;\n\n\t\tthis.autogenerated = true;\n\t\tthis.extrudeSettings = settings.extrudeSettings;\n\n\t\tvar i, t, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tt = this.generateTile(c, settings.tileScale, settings.material);\n\t\t\tt.position.copy(this.cellToPixel(c));\n\t\t\tt.position.y = 0;\n\t\t\ttiles.push(t);\n\t\t}\n\t\treturn tiles;\n\t}\n\n\tgenerateTilePoly(material) {\n\t\tif (!material) {\n\t\t\tmaterial = new THREE.MeshBasicMaterial({color: 0x24b4ff});\n\t\t}\n\t\tvar mesh = new THREE.Mesh(this.cellShapeGeo, material);\n\t\tthis._vec3.set(1, 0, 0);\n\t\tmesh.rotateOnAxis(this._vec3, vg.PI/2);\n\t\treturn mesh;\n\t}\n\n\t// create a flat, hexagon-shaped grid\n\tgenerate(config) {\n\t\tconfig = config || {};\n\t\tthis.size = typeof config.size === 'undefined' ? this.size : config.size;\n\t\tvar x, y, z, c;\n\t\tfor (x = -this.size; x < this.size+1; x++) {\n\t\t\tfor (y = -this.size; y < this.size+1; y++) {\n\t\t\t\tz = -x-y;\n\t\t\t\tif (Math.abs(x) <= this.size && Math.abs(y) <= this.size && Math.abs(z) <= this.size) {\n\t\t\t\t\tc = new Cell(x, y, z);\n\t\t\t\t\tthis.add(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateOverlay(size, overlayObj, overlayMat) {\n\t\tvar x, y, z;\n\t\tvar geo = this.cellShape.createPointsGeometry();\n\t\tfor (x = -size; x < size+1; x++) {\n\t\t\tfor (y = -size; y < size+1; y++) {\n\t\t\t\tz = -x-y;\n\t\t\t\tif (Math.abs(x) <= size && Math.abs(y) <= size && Math.abs(z) <= size) {\n\t\t\t\t\tthis._cel.set(x, y, z); // define the cell\n\t\t\t\t\tvar line = new THREE.Line(geo, overlayMat);\n\t\t\t\t\tline.position.copy(this.cellToPixel(this._cel));\n\t\t\t\t\tline.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t\t\toverlayObj.add(line);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\t// console.warn('A cell already exists there');\n\t\t\treturn;\n\t\t}\n\t\tthis.cells[h] = cell;\n\t\tthis.numCells++;\n\n\t\treturn cell;\n\t}\n\n\tremove(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\tdelete this.cells[h];\n\t\t\tthis.numCells--;\n\t\t}\n\t}\n\n\tload(url, cb, scope) {\n\t\tvar self = this;\n\t\tTools.getJSON({\n\t\t\turl: url,\n\t\t\tcallback: function(json) {\n\t\t\t\tself.fromJSON(json);\n\t\t\t\tcb.call(scope || null, json);\n\t\t\t},\n\t\t\tcache: false,\n\t\t\tscope: self\n\t\t});\n\t}\n\n\tfromJSON(json) {\n\t\tvar i, c;\n\t\tvar cells = json.cells;\n\n\t\tthis.cells = {};\n\t\tthis.numCells = 0;\n\n\t\tthis.size = json.size;\n\t\tthis.cellSize = json.cellSize;\n\t\tthis._cellWidth = this.cellSize * 2;\n\t\tthis._cellLength = (vg.SQRT3 * 0.5) * this._cellWidth;\n\n\t\tthis.extrudeSettings = json.extrudeSettings;\n\t\tthis.autogenerated = json.autogenerated;\n\n\t\tfor (i = 0; i < cells.length; i++) {\n\t\t\tc = new Cell();\n\t\t\tc.copy(cells[i]);\n\t\t\tthis.add(c);\n\t\t}\n\t}\n\n\ttoJSON() {\n\t\tvar json = {\n\t\t\tsize: this.size,\n\t\t\tcellSize: this.cellSize,\n\t\t\textrudeSettings: this.extrudeSettings,\n\t\t\tautogenerated: this.autogenerated\n\t\t};\n\t\tvar cells = [];\n\t\tvar c, k;\n\n\t\tfor (k in this.cells) {\n\t\t\tc = this.cells[k];\n\t\t\tcells.push({\n\t\t\t\tq: c.q,\n\t\t\t\tr: c.r,\n\t\t\t\ts: c.s,\n\t\t\t\th: c.h,\n\t\t\t\twalkable: c.walkable,\n\t\t\t\tuserData: c.userData\n\t\t\t});\n\t\t}\n\t\tjson.cells = cells;\n\n\t\treturn json;\n\t}\n}\n\nexport default HexGrid;\n","\nclass PathUtil {\n\tconstructor() {\n\t\t\n\t}\n/**\n\t * Backtrace according to the parent records and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node} node End node\n\t * @return {Array.<Array.<number>>} the path\n\t */\n\tbacktrace(node) {\n\t\tvar path = [node];\n\t\twhile (node._parent) {\n\t\t\tnode = node._parent;\n\t\t\tpath.push(node);\n\t\t}\n\t\treturn path.reverse();\n\t}\n\n\t/**\n\t * Backtrace from start and end node, and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node}\n\t * @param {Node}\n\t */\n\tbiBacktrace(nodeA, nodeB) {\n\t\tvar pathA = this.backtrace(nodeA),\n\t\t\tpathB = this.backtrace(nodeB);\n\t\treturn pathA.concat(pathB.reverse());\n\t}\n\n\t/**\n\t * Compute the length of the path.\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {number} The length of the path\n\t */\n\tpathLength(path) {\n\t\tvar i, sum = 0, a, b, dx, dy;\n\t\tfor (i = 1; i < path.length; ++i) {\n\t\t\ta = path[i - 1];\n\t\t\tb = path[i];\n\t\t\tdx = a[0] - b[0];\n\t\t\tdy = a[1] - b[1];\n\t\t\tsum += Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\t\treturn sum;\n\t}\n\n\n\t/**\n\t * Given the start and end coordinates, return all the coordinates lying\n\t * on the line formed by these coordinates, based on Bresenham's algorithm.\n\t * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\n\t * @param {number} x0 Start x coordinate\n\t * @param {number} y0 Start y coordinate\n\t * @param {number} x1 End x coordinate\n\t * @param {number} y1 End y coordinate\n\t * @return {Array.<Array.<number>>} The coordinates on the line\n\t */\n\tinterpolate(x0, y0, x1, y1) {\n\t\tvar abs = Math.abs,\n\t\t\tline = [],\n\t\t\tsx, sy, dx, dy, err, e2;\n\n\t\tdx = abs(x1 - x0);\n\t\tdy = abs(y1 - y0);\n\n\t\tsx = (x0 < x1) ? 1 : -1;\n\t\tsy = (y0 < y1) ? 1 : -1;\n\n\t\terr = dx - dy;\n\n\t\twhile (x0 !== x1 || y0 !== y1) {\n\t\t\tline.push([x0, y0]);\n\n\t\t\te2 = 2 * err;\n\t\t\tif (e2 > -dy) {\n\t\t\t\terr = err - dy;\n\t\t\t\tx0 = x0 + sx;\n\t\t\t}\n\t\t\tif (e2 < dx) {\n\t\t\t\terr = err + dx;\n\t\t\t\ty0 = y0 + sy;\n\t\t\t}\n\t\t}\n\n\t\treturn line;\n\t}\n\n\n\t/**\n\t * Given a compressed path, return a new path that has all the segments\n\t * in it interpolated.\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {Array.<Array.<number>>} expanded path\n\t */\n\texpandPath(path) {\n\t\tvar expanded = [],\n\t\t\tlen = path.length,\n\t\t\tcoord0, coord1,\n\t\t\tinterpolated,\n\t\t\tinterpolatedLen,\n\t\t\ti, j;\n\n\t\tif (len < 2) {\n\t\t\treturn expanded;\n\t\t}\n\n\t\tfor (i = 0; i < len - 1; ++i) {\n\t\t\tcoord0 = path[i];\n\t\t\tcoord1 = path[i + 1];\n\n\t\t\tinterpolated = this.interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\n\t\t\tinterpolatedLen = interpolated.length;\n\t\t\tfor (j = 0; j < interpolatedLen - 1; ++j) {\n\t\t\t\texpanded.push(interpolated[j]);\n\t\t\t}\n\t\t}\n\t\texpanded.push(path[len - 1]);\n\n\t\treturn expanded;\n\t}\n\n\n\t/**\n\t * Smoothen the give path.\n\t * The original path will not be modified; a new path will be returned.\n\t * @param {PF.Grid} grid\n\t * @param {Array.<Array.<number>>} path The path\n\t */\n\tsmoothenPath(grid, path) {\n\t\tvar len = path.length,\n\t\t\tx0 = path[0][0],        // path start x\n\t\t\ty0 = path[0][1],        // path start y\n\t\t\tx1 = path[len - 1][0],  // path end x\n\t\t\ty1 = path[len - 1][1],  // path end y\n\t\t\tsx, sy,                 // current start coordinate\n\t\t\tex, ey,                 // current end coordinate\n\t\t\tnewPath,\n\t\t\tlastValidCoord,\n\t\t\ti, j, coord, line, testCoord, blocked;\n\n\t\tsx = x0;\n\t\tsy = y0;\n\t\tnewPath = [[sx, sy]];\n\n\t\tfor (i = 2; i < len; ++i) {\n\t\t\tcoord = path[i];\n\t\t\tex = coord[0];\n\t\t\tey = coord[1];\n\t\t\tline = this.interpolate(sx, sy, ex, ey);\n\n\t\t\tblocked = false;\n\t\t\tfor (j = 1; j < line.length; ++j) {\n\t\t\t\ttestCoord = line[j];\n\n\t\t\t\tif (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (blocked) {\n\t\t\t\tlastValidCoord = path[i - 1];\n\t\t\t\tnewPath.push(lastValidCoord);\n\t\t\t\tsx = lastValidCoord[0];\n\t\t\t\tsy = lastValidCoord[1];\n\t\t\t}\n\t\t}\n\t\tnewPath.push([x1, y1]);\n\n\t\treturn newPath;\n\t}\n\n\n\t/**\n\t * Compress a path, remove redundant nodes without altering the shape\n\t * The original path is not modified\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {Array.<Array.<number>>} The compressed path\n\t */\n\tcompressPath(path) {\n\n\t\t// nothing to compress\n\t\tif (path.length < 3) {\n\t\t\treturn path;\n\t\t}\n\n\t\tvar compressed = [],\n\t\t\tsx = path[0][0], // start x\n\t\t\tsy = path[0][1], // start y\n\t\t\tpx = path[1][0], // second point x\n\t\t\tpy = path[1][1], // second point y\n\t\t\tdx = px - sx, // direction between the two points\n\t\t\tdy = py - sy, // direction between the two points\n\t\t\tlx, ly,\n\t\t\tldx, ldy,\n\t\t\tsq, i;\n\n\t\t// normalize the direction\n\t\tsq = Math.sqrt(dx*dx + dy*dy);\n\t\tdx /= sq;\n\t\tdy /= sq;\n\n\t\t// start the new path\n\t\tcompressed.push([sx,sy]);\n\n\t\tfor (i = 2; i < path.length; i++) {\n\n\t\t\t// store the last point\n\t\t\tlx = px;\n\t\t\tly = py;\n\n\t\t\t// store the last direction\n\t\t\tldx = dx;\n\t\t\tldy = dy;\n\n\t\t\t// next point\n\t\t\tpx = path[i][0];\n\t\t\tpy = path[i][1];\n\n\t\t\t// next direction\n\t\t\tdx = px - lx;\n\t\t\tdy = py - ly;\n\n\t\t\t// normalize\n\t\t\tsq = Math.sqrt(dx*dx + dy*dy);\n\t\t\tdx /= sq;\n\t\t\tdy /= sq;\n\n\t\t\t// if the direction has changed, store the point\n\t\t\tif (dx !== ldx || dy !== ldy) {\n\t\t\t\tcompressed.push([lx,ly]);\n\t\t\t}\n\t\t}\n\n\t\t// store the last point\n\t\tcompressed.push([px,py]);\n\n\t\treturn compressed;\n\t}\n\n}\n\nexport default PathUtil;\n","import Tools from './Tools';\nimport PathUtil from './PathUtil';\nimport LinkedList from './LinkedList';\n\nclass AStarFinder {\n\tconstructor(finderConfig) {\n\t\tfinderConfig = finderConfig || {};\n\n\t\tvar settings = {\n\t\t\tallowDiagonal: false,\n\t\t\theuristicFilter: null\n\t\t};\n\t\tsettings = Tools.merge(settings, finderConfig);\n\n\t\tthis.allowDiagonal = settings.allowDiagonal;\n\t\tthis.heuristicFilter = settings.heuristicFilter;\n\n\t\tthis.list = new LinkedList();\n\t}\n\n\tfindPath(startNode, endNode, heuristic, grid) {\n\t\tvar current, costSoFar, neighbors, n, i, l;\n\t\theuristic = heuristic || this.heuristicFilter;\n\t\t// clear old values from previous finding\n\t\tgrid.clearPath();\n\t\tthis.list.clear();\n\n\t\t// push the start current into the open list\n\t\tthis.list.add(startNode);\n\n\t\t// while the open list is not empty\n\t\twhile (this.list.length > 0) {\n\t\t\t// sort so lowest cost is first\n\t\t\tthis.list.sort(this.compare);\n\n\t\t\t// pop the position of current which has the minimum `_calcCost` value.\n\t\t\tcurrent = this.list.shift();\n\t\t\tcurrent._visited = true;\n\n\t\t\t// if reached the end position, construct the path and return it\n\t\t\tif (current === endNode) {\n\t\t\t\treturn PathUtil.backtrace(endNode);\n\t\t\t}\n\n\t\t\t// cycle through each neighbor of the current current\n\t\t\tneighbors = grid.getNeighbors(current, this.allowDiagonal, heuristic);\n\t\t\tfor (i = 0, l = neighbors.length; i < l; i++) {\n\t\t\t\tn = neighbors[i];\n\n\t\t\t\tif (!n.walkable) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tcostSoFar = current._calcCost + grid.distance(current, n);\n\n\t\t\t\t// check if the neighbor has not been inspected yet, or can be reached with smaller cost from the current node\n\t\t\t\tif (!n._visited || costSoFar < n._calcCost) {\n\t\t\t\t\tn._visited = true;\n\t\t\t\t\tn._parent = current;\n\t\t\t\t\tn._calcCost = costSoFar;\n\t\t\t\t\t// console.log(n);\n\t\t\t\t\t// _priority is the most important property, since it makes the algorithm \"greedy\" and seek the goal.\n\t\t\t\t\t// otherwise it behaves like a brushfire/breadth-first\n\t\t\t\t\tn._priority = costSoFar + grid.distance(endNode, n);\n\n\t\t\t\t\t// check neighbor if it's the end current as well--often cuts steps by a significant amount\n\t\t\t\t\tif (n === endNode) {\n\t\t\t\t\t\treturn PathUtil.backtrace(endNode);\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(n);\n\t\t\t\t\tthis.list.add(n);\n\t\t\t\t}\n\t\t\t\t// console.log(this.list);\n\t\t\t} // end for each neighbor\n\t\t} // end while not open list empty\n\t\t// failed to find the path\n\t\treturn null;\n\t}\n\n\tcompare (nodeA, nodeB) {\n\t\treturn nodeA._priority - nodeB._priority;\n\t}\n\n}\n\nexport default AStarFinder;\n","import * as THREE from \"three\";\n\nclass Loader {\n\tconstructor() {\n\t\tthis.manager = null;\n\t\tthis.imageLoader = null;\n\t\tthis.crossOrigin = false;\n\t}\n\n\tstatic init(crossOrigin) {\n\t\tthis.crossOrigin = crossOrigin || false;\n\n\t\tthis.manager = new THREE.LoadingManager(function() {\n\t\t\t// called when all images are loaded, so call your state manager or something\n\t\t}, function() {\n\t\t\t// noop\n\t\t}, function() {\n\t\t\tconsole.warn('Error loading images');\n\t\t});\n\n\t\tthis.imageLoader = new THREE.ImageLoader(this.manager);\n\t\tthis.imageLoader.crossOrigin = crossOrigin;\n\t}\n\n\tstatic loadTexture (url, mapping, onLoad, onError) {\n\t\tvar texture = new THREE.Texture(null, mapping);\n\t\tthis.imageLoader.load(url, function(image) { // on load\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t},\n\t\t\tnull, // on progress\n\t\t\tfunction (evt) { // on error\n\t\t\t\tif (onError) onError(evt);\n\t\t\t});\n\t\ttexture.sourceFile = url;\n\n\t\treturn texture;\n\t}\n\n}\n\nexport default Loader;\n","import * as THREE from \"three\";\nimport AStarFinder from './AStarFinder';\nimport Loader from './Loader';\nimport Tools from './Tools';\n\nclass Board {\n\tconstructor(grid, finderConfig) {\n\t\tif (!grid) throw new Error('You must pass in a grid system for the board to use.');\n\n\t\tthis.tiles = [];\n\t\tthis.tileGroup = null; // only for tiles\n\n\t\tthis.group = new THREE.Object3D(); // can hold all entities, also holds tileGroup, never trashed\n\n\t\tthis.grid = null;\n\t\tthis.overlay = null;\n\t\tthis.finder = new AStarFinder(finderConfig);\n\t\t// need to keep a resource cache around, so this Loader does that, use it instead of THREE.ImageUtils\n\t\tLoader.init();\n\n\t\tthis.setGrid(grid);\n\t}\n    setEntityOnTile(entity, tile) {\n\t\t// snap an entity's position to a tile; merely copies position\n\t\tvar pos = this.grid.cellToPixel(tile.cell);\n\t\tentity.position.copy(pos);\n\t\t// adjust for any offset after the entity was set directly onto the tile\n\t\tentity.position.y += entity.heightOffset || 0;\n\t\t// remove entity from old tile\n\t\tif (entity.tile) {\n\t\t\tentity.tile.entity = null;\n\t\t}\n\t\t// set new situation\n\t\tentity.tile = tile;\n\t\ttile.entity = entity;\n\t}\n\n\taddTile(tile) {\n\t\tvar i = this.tiles.indexOf(tile);\n\t\tif (i === -1) this.tiles.push(tile);\n\t\telse return;\n\n\t\tthis.snapTileToGrid(tile);\n\t\ttile.position.y = 0;\n\n\t\tthis.tileGroup.add(tile.mesh);\n\t\tthis.grid.add(tile.cell);\n\n\t\ttile.cell.tile = tile;\n\t}\n\n\tremoveTile(tile) {\n\t\tif (!tile) return; // was already removed somewhere\n\t\tvar i = this.tiles.indexOf(tile);\n\t\tthis.grid.remove(tile.cell);\n\n\t\tif (i !== -1) this.tiles.splice(i, 1);\n\t\t// this.tileGroup.remove(tile.mesh);\n\n\t\ttile.dispose();\n\t}\n\n\tremoveAllTiles() {\n\t\tif (!this.tileGroup) return;\n\t\tvar tiles = this.tileGroup.children;\n\t\tfor (var i = 0; i < tiles.length; i++) {\n\t\t\tthis.tileGroup.remove(tiles[i]);\n\t\t}\n\t}\n\n\tgetTileAtCell(cell) {\n\t\tvar h = this.grid.cellToHash(cell);\n\t\treturn cell.tile || (typeof this.grid.cells[h] !== 'undefined' ? this.grid.cells[h].tile : null);\n\t}\n\n\tsnapToGrid(pos) {\n\t\tvar cell = this.grid.pixelToCell(pos);\n\t\tpos.copy(this.grid.cellToPixel(cell));\n\t}\n\n\tsnapTileToGrid(tile) {\n\t\tif (tile.cell) {\n\t\t\ttile.position.copy(this.grid.cellToPixel(tile.cell));\n\t\t}\n\t\telse {\n\t\t\tvar cell = this.grid.pixelToCell(tile.position);\n\t\t\ttile.position.copy(this.grid.cellToPixel(cell));\n\t\t}\n\t\treturn tile;\n\t}\n\n\tgetRandomTile() {\n\t\tvar i = Tools.randomInt(0, this.tiles.length-1);\n\t\treturn this.tiles[i];\n\t}\n\n\tfindPath(startTile, endTile, heuristic) {\n\t\treturn this.finder.findPath(startTile.cell, endTile.cell, heuristic, this.grid);\n\t}\n\n\tsetGrid(newGrid) {\n\t\tthis.group.remove(this.tileGroup);\n\t\tif (this.grid && newGrid !== this.grid) {\n\t\t\tthis.removeAllTiles();\n\t\t\tthis.tiles.forEach(function(t) {\n\t\t\t\tthis.grid.remove(t.cell);\n\t\t\t\tt.dispose();\n\t\t\t});\n\t\t\tthis.grid.dispose();\n\t\t}\n\t\tthis.grid = newGrid;\n\t\tthis.tiles = [];\n\t\tthis.tileGroup = new THREE.Object3D();\n\t\tthis.group.add(this.tileGroup);\n\t}\n\n\tgenerateOverlay(size) {\n\t\tvar mat = new THREE.LineBasicMaterial({\n\t\t\tcolor: 0x000000,\n\t\t\topacity: 0.3\n\t\t});\n\n\t\tif (this.overlay) {\n\t\t\tthis.group.remove(this.overlay);\n\t\t}\n\n\t\tthis.overlay = new THREE.Object3D();\n\n\t\tthis.grid.generateOverlay(size, this.overlay, mat);\n\n\t\tthis.group.add(this.overlay);\n\t}\n\n\tgenerateTilemap(config) {\n\t\tthis.reset();\n\n\t\tvar tiles = this.grid.generateTiles(config);\n\t\tthis.tiles = tiles;\n\n\t\tthis.tileGroup = new THREE.Object3D();\n\t\tfor (var i = 0; i < tiles.length; i++) {\n\t\t\tthis.tileGroup.add(tiles[i].mesh);\n\t\t}\n\n\t\tthis.group.add(this.tileGroup);\n\t}\n\n\treset() {\n\t\t// removes all tiles from the scene, but leaves the grid intact\n\t\tthis.removeAllTiles();\n\t\tif (this.tileGroup) this.group.remove(this.tileGroup);\n\t}\n}\n\nexport default Board;\n","import * as THREE from \"three\";\n// var OrbitControls = require('three-orbit-controls')(THREE);\nimport HexGrid from './HexGrid';\nimport Board from './Board';\nimport Tools from './Tools';\n\nclass Scene {\n    constructor(sceneConfig, controlConfig) {\n        var sceneSettings = {\n            element: document.body,\n            alpha: true,\n            antialias: true,\n            clearColor: '#fff',\n            sortObjects: false,\n            fog: null,\n            light: new THREE.DirectionalLight(0xffffff),\n            lightPosition: null,\n            cameraType: 'PerspectiveCamera',\n            cameraPosition: null, // {x, y, z}\n            orthoZoom: 4\n        };\n    \n        var controlSettings = {\n            minDistance: 100,\n            maxDistance: 1000,\n            zoomSpeed: 2,\n            noZoom: false\n        };\n    \n        sceneSettings = Tools.merge(sceneSettings, sceneConfig);\n        if (typeof controlConfig !== 'boolean') {\n            controlSettings = Tools.merge(controlSettings, controlConfig);\n        }\n    \n        this.renderer = new THREE.WebGLRenderer({\n            alpha: sceneSettings.alpha,\n            antialias: sceneSettings.antialias\n        });\n        this.renderer.setClearColor(sceneSettings.clearColor, 0);\n        this.renderer.sortObjects = sceneSettings.sortObjects;\n    \n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n    \n        this.orthoZoom = sceneSettings.orthoZoom;\n    \n        this.container = new THREE.Scene();\n        this.container.fog = sceneSettings.fog;\n    \n        this.container.add(new THREE.AmbientLight(0xdddddd));\n    \n        if (!sceneSettings.lightPosition) {\n            sceneSettings.light.position.set(-1, 1, -1).normalize();\n        }\n        this.container.add(sceneSettings.light);\n    \n        if (sceneSettings.cameraType === 'OrthographicCamera') {\n            var width = window.innerWidth / this.orthoZoom;\n            var height = window.innerHeight / this.orthoZoom;\n            this.camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 5000);\n        }\n        else {\n            this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5000);\n        }\n    \n        this.contolled = !!controlConfig;\n        // if (this.contolled) {\n        //     this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        //     this.controls.minDistance = controlSettings.minDistance;\n        //     this.controls.maxDistance = controlSettings.maxDistance;\n        //     this.controls.zoomSpeed = controlSettings.zoomSpeed;\n        //     this.controls.noZoom = controlSettings.noZoom;\n        // }\n    \n        if (sceneSettings.cameraPosition) {\n            this.camera.position.copy(sceneSettings.cameraPosition);\n        }\n    \n        window.addEventListener('resize', function onWindowResize() {\n            this.width = window.innerWidth;\n            this.height = window.innerHeight;\n            if (this.camera.type === 'OrthographicCamera') {\n                var width = this.width / this.orthoZoom;\n                var height = this.height / this.orthoZoom;\n                this.camera.left = width / -2;\n                this.camera.right = width / 2;\n                this.camera.top = height / 2;\n                this.camera.bottom = height / -2;\n            }\n            else {\n                this.camera.aspect = this.width / this.height;\n            }\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(this.width, this.height);\n        }.bind(this), false);\n    \n        this.attachTo(sceneSettings.element);\n    }\n\n    attachTo(element) {\n\t\telement.style.width = this.width + 'px';\n\t\telement.style.height = this.height + 'px';\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\n\t\tthis.renderer.setSize(this.width, this.height);\n\t\telement.appendChild(this.renderer.domElement);\n\t}\n\n\tadd(mesh) {\n\t\tthis.container.add(mesh);\n\t}\n\n\tremove(mesh) {\n\t\tthis.container.remove(mesh);\n\t}\n\n\trender() {\n\t\t// if (this.contolled) this.controls.update();\n\t\tthis.renderer.render(this.container, this.camera);\n\t}\n\n\tupdateOrthoZoom() {\n\t\tif (this.orthoZoom <= 0) {\n\t\t\tthis.orthoZoom = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar width = this.width / this.orthoZoom;\n\t\tvar height = this.height / this.orthoZoom;\n\t\tthis.camera.left = width / -2;\n\t\tthis.camera.right = width / 2;\n\t\tthis.camera.top = height / 2;\n\t\tthis.camera.bottom = height / -2;\n\t\tthis.camera.updateProjectionMatrix();\n\t}\n\n\tfocusOn(obj) {\n\t\tthis.camera.lookAt(obj.position);\n\t}\n\n    animate() {  \n        // this._cube.rotation.x += 0.01;\n        // this._cube.rotation.y += 0.01;\n  \n        this.renderer.render(this.container, this.camera);\n    }\n}\n\nexport default Scene;\n","import './App.css';\nimport React from \"react\";\nimport Scene from './Scene';\nimport HexGrid from './HexGrid';\n// import MouseCaster from './MouseCaster';\nimport Board from './Board';\n\nclass App extends React.Component {\n  componentDidMount() {\n    //let scene = new Scene(this.mount);\n    let scene = new Scene({\n\t\t\telement: this.mount,\n\t\t\tcameraPosition: {x:207.5, y:250, z:360}\n\t\t}, true);\n\n    var grid = new HexGrid();\n\t\t// var mouse = new vg.MouseCaster(scene.container, scene.camera);\n\t\tvar board = new Board(grid);\n\n\t\tgrid.load('./hex-map.json', function() {\n\t\t\tboard.generateTilemap();\n\t\t}, this);\n\t\tscene.add(board.group);\n\t\tscene.focusOn(board.group);\n\t\tconsole.log(board.group);\n\n\t\t// mouse.signal.add(function(evt, tile) {\n\t\t// \tif (evt === vg.MouseCaster.CLICK) {\n\t\t// \t\ttile.toggle();\n\t\t// \t\tconsole.log(tile.cell, tile.position);\n\t\t// \t\tconsole.log(tile.cell.userData);\n\t\t// \t}\n\t\t// }, this);\n\n    var idle = function () {\n      requestAnimationFrame(idle);\n      scene.animate();\n\t\t\t// mouse.update();\n    };\n\n    idle();\n  }\n\n  render() {\n    return <div ref={ref => (this.mount = ref)} />;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}